#include <ros/ros.h>
#include <cstdlib>
#include <iostream>
#include <math.h>
#include <stdio.h>
#include <sensor_msgs/PointCloud2.h>   
#include <pcl_conversions/pcl_conversions.h>
#include <pcl/point_types.h>
#include <pcl/PCLPointCloud2.h>
#include <pcl/conversions.h>
#include <pcl_ros/transforms.h>
#include <pcl/visualization/cloud_viewer.h>
#include <pcl/common/transforms.h>
#include <pcl/io/ply_io.h>
#include <pcl/io/pcd_io.h>

using namespace std;






 

int main (int argc, char **argv){

    ros::init (argc, argv, "kinect_tracking_node");
    ros::NodeHandle nh;
    ros::Rate loop_rate( 10.0 );
    ros::Subscriber sub = nh.subscribe("/kinect2/sd/points", 1, cloud_cb);
    
    while (ros::ok()){
        
	
	ros::spinOnce();
	loop_rate.sleep();
     }
 	
     return 0;
}







